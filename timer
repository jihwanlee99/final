module timer(
    input   wire    clk100m,
    input   wire    clk,    //customized 1 sec clk
    input   wire    rst,    //rst
    input   wire    btn_hour1_plus_shot,
    
    output  wire    [3:0]   hour10,
    output  wire    [3:0]   hour1,
    output  wire    [3:0]   min10,
    output  wire    [3:0]   min1,
    output  wire    [3:0]   sec10,
    output  wire    [3:0]   sec1,
    
    output  wire            is_night    //0: afternoon, 1: night
);

parameter cnt_hour24 = 17'd86400-1;
reg [16:0]  cnt_timer=0;

reg btn_hour1_plus_shot_get;
reg btn_hour1_plus_shot_get_buf1;
reg btn_hour1_plus_shot_slow;
always @ (posedge clk100m) begin
    if(rst)                             btn_hour1_plus_shot_get <=  0;
    else if(btn_hour1_plus_shot)        btn_hour1_plus_shot_get <=  1;
    else if(btn_hour1_plus_shot_slow)   btn_hour1_plus_shot_get <=  0;
end

always @ (posedge clk) begin
    if(rst) btn_hour1_plus_shot_get_buf1    <=  0;
    else    btn_hour1_plus_shot_get_buf1    <=  btn_hour1_plus_shot_get;
    
    btn_hour1_plus_shot_slow    <=  (~btn_hour1_plus_shot_get_buf1) &   btn_hour1_plus_shot_get;
end


always @ (posedge clk) begin
    if(rst) cnt_timer    <=  0;
    else begin
        if(btn_hour1_plus_shot_slow) begin
            if(cnt_timer + 3600 >=  cnt_hour24) cnt_timer   <=  cnt_timer + 17'd3600 - cnt_hour24;
            else                                cnt_timer   <=  cnt_timer + 17'd3600;
        end
        else begin
            if(cnt_timer >= cnt_hour24) cnt_timer   <=  0;
            else                        cnt_timer   <=  cnt_timer + 1;
        end
    end
end

assign  hour10  =   (cnt_timer  >=  20*3600)    ?   4'd2    :   
                    (cnt_timer  >=  10*3600)    ?   4'd1    :   4'd0;

assign  hour1   =   ((cnt_timer - 36000*hour10) >= 9*3600)   ?   4'd9    :
                    ((cnt_timer - 36000*hour10) >= 8*3600)   ?   4'd8    :
                    ((cnt_timer - 36000*hour10) >= 7*3600)   ?   4'd7    :
                    ((cnt_timer - 36000*hour10) >= 6*3600)   ?   4'd6    :
                    ((cnt_timer - 36000*hour10) >= 5*3600)   ?   4'd5    :
                    ((cnt_timer - 36000*hour10) >= 4*3600)   ?   4'd4    :
                    ((cnt_timer - 36000*hour10) >= 3*3600)   ?   4'd3    :
                    ((cnt_timer - 36000*hour10) >= 2*3600)   ?   4'd2    :
                    ((cnt_timer - 36000*hour10) >= 1*3600)   ?   4'd1    :   4'd0;

assign  min10   =   ((cnt_timer - 3600*(10*hour10 + hour1)) >= 50*60)   ?   4'd5    :
                    ((cnt_timer - 3600*(10*hour10 + hour1)) >= 40*60)   ?   4'd4    :
                    ((cnt_timer - 3600*(10*hour10 + hour1)) >= 30*60)   ?   4'd3    :
                    ((cnt_timer - 3600*(10*hour10 + hour1)) >= 20*60)   ?   4'd2    :
                    ((cnt_timer - 3600*(10*hour10 + hour1)) >= 10*60)   ?   4'd1    :   4'd0;

assign  min1    =   ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 9*60)   ?   4'd9    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 8*60)   ?   4'd8    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 7*60)   ?   4'd7    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 6*60)   ?   4'd6    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 5*60)   ?   4'd5    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 4*60)   ?   4'd4    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 3*60)   ?   4'd3    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 2*60)   ?   4'd2    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 600*min10) >= 1*60)   ?   4'd1    :    4'd0;

assign  sec10   =   ((cnt_timer - 3600*(10*hour10 + hour1) - 60*(10*min10 + min1)) >= 50)   ?   4'd5    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 60*(10*min10 + min1)) >= 40)   ?   4'd4    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 60*(10*min10 + min1)) >= 30)   ?   4'd3    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 60*(10*min10 + min1)) >= 20)   ?   4'd2    :
                    ((cnt_timer - 3600*(10*hour10 + hour1) - 60*(10*min10 + min1)) >= 10)   ?   4'd1    :   4'd0;

assign  sec1    =   (cnt_timer - 3600*(10*hour10 + hour1) - 60*(10*min10 + min1)) - 10*sec10;

assign  is_night    =   ((cnt_timer >= 8*3600) & (cnt_timer < 23*3600))    ?   1'b0    :   1'b1; 

endmodule
